<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos/Enums/RaidLevel.proto
 */


namespace POGOProtos\Enums;

/**
 * Protobuf enum : POGOProtos.Enums.RaidLevel
 */
class RaidLevel extends \Protobuf\Enum
{

    /**
     * RAID_LEVEL_UNSET = 0
     */
    const RAID_LEVEL_UNSET_VALUE = 0;

    /**
     * RAID_LEVEL_1 = 1
     */
    const RAID_LEVEL_1_VALUE = 1;

    /**
     * RAID_LEVEL_2 = 2
     */
    const RAID_LEVEL_2_VALUE = 2;

    /**
     * RAID_LEVEL_3 = 3
     */
    const RAID_LEVEL_3_VALUE = 3;

    /**
     * RAID_LEVEL_4 = 4
     */
    const RAID_LEVEL_4_VALUE = 4;

    /**
     * RAID_LEVEL_5 = 5
     */
    const RAID_LEVEL_5_VALUE = 5;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_UNSET = null;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_1 = null;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_2 = null;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_3 = null;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_4 = null;

    /**
     * @var \POGOProtos\Enums\RaidLevel
     */
    protected static $RAID_LEVEL_5 = null;

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_UNSET()
    {
        if (self::$RAID_LEVEL_UNSET !== null) {
            return self::$RAID_LEVEL_UNSET;
        }

        return self::$RAID_LEVEL_UNSET = new self('RAID_LEVEL_UNSET', self::RAID_LEVEL_UNSET_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_1()
    {
        if (self::$RAID_LEVEL_1 !== null) {
            return self::$RAID_LEVEL_1;
        }

        return self::$RAID_LEVEL_1 = new self('RAID_LEVEL_1', self::RAID_LEVEL_1_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_2()
    {
        if (self::$RAID_LEVEL_2 !== null) {
            return self::$RAID_LEVEL_2;
        }

        return self::$RAID_LEVEL_2 = new self('RAID_LEVEL_2', self::RAID_LEVEL_2_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_3()
    {
        if (self::$RAID_LEVEL_3 !== null) {
            return self::$RAID_LEVEL_3;
        }

        return self::$RAID_LEVEL_3 = new self('RAID_LEVEL_3', self::RAID_LEVEL_3_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_4()
    {
        if (self::$RAID_LEVEL_4 !== null) {
            return self::$RAID_LEVEL_4;
        }

        return self::$RAID_LEVEL_4 = new self('RAID_LEVEL_4', self::RAID_LEVEL_4_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function RAID_LEVEL_5()
    {
        if (self::$RAID_LEVEL_5 !== null) {
            return self::$RAID_LEVEL_5;
        }

        return self::$RAID_LEVEL_5 = new self('RAID_LEVEL_5', self::RAID_LEVEL_5_VALUE);
    }

    /**
     * @param int $value
     * @return \POGOProtos\Enums\RaidLevel
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::RAID_LEVEL_UNSET();
            case 1: return self::RAID_LEVEL_1();
            case 2: return self::RAID_LEVEL_2();
            case 3: return self::RAID_LEVEL_3();
            case 4: return self::RAID_LEVEL_4();
            case 5: return self::RAID_LEVEL_5();
            default: return null;
        }
    }


}

