<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Beluga/BelugaIncenseBox.proto

namespace POGOProtos\Data\Beluga;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>POGOProtos.Data.Beluga.BelugaIncenseBox</code>
 */
class BelugaIncenseBox extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool is_usable = 1;</code>
     */
    private $is_usable = false;
    /**
     * Generated from protobuf field <code>int64 cool_down_finished_timestamp_ms = 2;</code>
     */
    private $cool_down_finished_timestamp_ms = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $is_usable
     *     @type int|string $cool_down_finished_timestamp_ms
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\POGOProtos\Data\Beluga\BelugaIncenseBox::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool is_usable = 1;</code>
     * @return bool
     */
    public function getIsUsable()
    {
        return $this->is_usable;
    }

    /**
     * Generated from protobuf field <code>bool is_usable = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsUsable($var)
    {
        GPBUtil::checkBool($var);
        $this->is_usable = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 cool_down_finished_timestamp_ms = 2;</code>
     * @return int|string
     */
    public function getCoolDownFinishedTimestampMs()
    {
        return $this->cool_down_finished_timestamp_ms;
    }

    /**
     * Generated from protobuf field <code>int64 cool_down_finished_timestamp_ms = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCoolDownFinishedTimestampMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->cool_down_finished_timestamp_ms = $var;

        return $this;
    }

}

