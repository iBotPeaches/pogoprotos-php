<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Player/PlayerPublicProfile.proto

namespace POGOProtos\Data\Player;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.Player.PlayerPublicProfile</code>
 */
class PlayerPublicProfile extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <code>int32 level = 2;</code>
     */
    private $level = 0;
    /**
     * <code>.POGOProtos.Data.Player.PlayerAvatar avatar = 3;</code>
     */
    private $avatar = null;
    /**
     * <code>.POGOProtos.Enums.TeamColor team_color = 4;</code>
     */
    private $team_color = 0;
    /**
     * <code>int32 battles_won = 5;</code>
     */
    private $battles_won = 0;
    /**
     * <code>float km_walked = 6;</code>
     */
    private $km_walked = 0.0;
    /**
     * <code>int32 caught_pokemon = 7;</code>
     */
    private $caught_pokemon = 0;
    /**
     * <code>.POGOProtos.Enums.GymBadgeType gym_badge_type = 8;</code>
     */
    private $gym_badge_type = 0;
    /**
     * <code>repeated .POGOProtos.Data.Player.PlayerBadge badges = 9;</code>
     */
    private $badges;
    /**
     * <code>int64 experience = 10;</code>
     */
    private $experience = 0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\Player\PlayerPublicProfile::initOnce();
        parent::__construct();
    }

    /**
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <code>int32 level = 2;</code>
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * <code>int32 level = 2;</code>
     */
    public function setLevel($var)
    {
        GPBUtil::checkInt32($var);
        $this->level = $var;
    }

    /**
     * <code>.POGOProtos.Data.Player.PlayerAvatar avatar = 3;</code>
     */
    public function getAvatar()
    {
        return $this->avatar;
    }

    /**
     * <code>.POGOProtos.Data.Player.PlayerAvatar avatar = 3;</code>
     */
    public function setAvatar(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\Player\PlayerAvatar::class);
        $this->avatar = $var;
    }

    /**
     * <code>.POGOProtos.Enums.TeamColor team_color = 4;</code>
     */
    public function getTeamColor()
    {
        return $this->team_color;
    }

    /**
     * <code>.POGOProtos.Enums.TeamColor team_color = 4;</code>
     */
    public function setTeamColor($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\TeamColor::class);
        $this->team_color = $var;
    }

    /**
     * <code>int32 battles_won = 5;</code>
     */
    public function getBattlesWon()
    {
        return $this->battles_won;
    }

    /**
     * <code>int32 battles_won = 5;</code>
     */
    public function setBattlesWon($var)
    {
        GPBUtil::checkInt32($var);
        $this->battles_won = $var;
    }

    /**
     * <code>float km_walked = 6;</code>
     */
    public function getKmWalked()
    {
        return $this->km_walked;
    }

    /**
     * <code>float km_walked = 6;</code>
     */
    public function setKmWalked($var)
    {
        GPBUtil::checkFloat($var);
        $this->km_walked = $var;
    }

    /**
     * <code>int32 caught_pokemon = 7;</code>
     */
    public function getCaughtPokemon()
    {
        return $this->caught_pokemon;
    }

    /**
     * <code>int32 caught_pokemon = 7;</code>
     */
    public function setCaughtPokemon($var)
    {
        GPBUtil::checkInt32($var);
        $this->caught_pokemon = $var;
    }

    /**
     * <code>.POGOProtos.Enums.GymBadgeType gym_badge_type = 8;</code>
     */
    public function getGymBadgeType()
    {
        return $this->gym_badge_type;
    }

    /**
     * <code>.POGOProtos.Enums.GymBadgeType gym_badge_type = 8;</code>
     */
    public function setGymBadgeType($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\GymBadgeType::class);
        $this->gym_badge_type = $var;
    }

    /**
     * <code>repeated .POGOProtos.Data.Player.PlayerBadge badges = 9;</code>
     */
    public function getBadges()
    {
        return $this->badges;
    }

    /**
     * <code>repeated .POGOProtos.Data.Player.PlayerBadge badges = 9;</code>
     */
    public function setBadges(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \POGOProtos\Data\Player\PlayerBadge::class);
        $this->badges = $var;
    }

    /**
     * <code>int64 experience = 10;</code>
     */
    public function getExperience()
    {
        return $this->experience;
    }

    /**
     * <code>int64 experience = 10;</code>
     */
    public function setExperience($var)
    {
        GPBUtil::checkInt64($var);
        $this->experience = $var;
    }

}

