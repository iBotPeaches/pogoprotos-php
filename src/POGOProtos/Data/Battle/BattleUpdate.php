<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Battle/BattleUpdate.proto

namespace POGOProtos\Data\Battle;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.Battle.BattleUpdate</code>
 */
class BattleUpdate extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.POGOProtos.Data.Battle.BattleLog battle_log = 1;</code>
     */
    private $battle_log = null;
    /**
     * <code>string battle_id = 2;</code>
     */
    private $battle_id = '';
    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_defender = 3;</code>
     */
    private $active_defender = null;
    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_attacker = 4;</code>
     */
    private $active_attacker = null;
    /**
     * <code>.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 5;</code>
     */
    private $highest_friendship_milestone = 0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\Battle\BattleUpdate::initOnce();
        parent::__construct();
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattleLog battle_log = 1;</code>
     */
    public function getBattleLog()
    {
        return $this->battle_log;
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattleLog battle_log = 1;</code>
     */
    public function setBattleLog(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\Battle\BattleLog::class);
        $this->battle_log = $var;
    }

    /**
     * <code>string battle_id = 2;</code>
     */
    public function getBattleId()
    {
        return $this->battle_id;
    }

    /**
     * <code>string battle_id = 2;</code>
     */
    public function setBattleId($var)
    {
        GPBUtil::checkString($var, True);
        $this->battle_id = $var;
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_defender = 3;</code>
     */
    public function getActiveDefender()
    {
        return $this->active_defender;
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_defender = 3;</code>
     */
    public function setActiveDefender(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\Battle\BattlePokemonInfo::class);
        $this->active_defender = $var;
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_attacker = 4;</code>
     */
    public function getActiveAttacker()
    {
        return $this->active_attacker;
    }

    /**
     * <code>.POGOProtos.Data.Battle.BattlePokemonInfo active_attacker = 4;</code>
     */
    public function setActiveAttacker(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\Battle\BattlePokemonInfo::class);
        $this->active_attacker = $var;
    }

    /**
     * <code>.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 5;</code>
     */
    public function getHighestFriendshipMilestone()
    {
        return $this->highest_friendship_milestone;
    }

    /**
     * <code>.POGOProtos.Enums.FriendshipLevelMilestone highest_friendship_milestone = 5;</code>
     */
    public function setHighestFriendshipMilestone($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\FriendshipLevelMilestone::class);
        $this->highest_friendship_milestone = $var;
    }

}

