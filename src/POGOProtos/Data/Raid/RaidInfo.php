<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Raid/RaidInfo.proto

namespace POGOProtos\Data\Raid;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.Raid.RaidInfo</code>
 */
class RaidInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int64 raid_seed = 1;</code>
     */
    private $raid_seed = 0;
    /**
     * <code>int64 raid_spawn_ms = 2;</code>
     */
    private $raid_spawn_ms = 0;
    /**
     * <code>int64 raid_battle_ms = 3;</code>
     */
    private $raid_battle_ms = 0;
    /**
     * <code>int64 raid_end_ms = 4;</code>
     */
    private $raid_end_ms = 0;
    /**
     * <code>.POGOProtos.Data.PokemonData raid_pokemon = 5;</code>
     */
    private $raid_pokemon = null;
    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    private $raid_level = 0;
    /**
     * <code>bool complete = 7;</code>
     */
    private $complete = false;
    /**
     * <code>bool is_exclusive = 8;</code>
     */
    private $is_exclusive = false;
    /**
     * <code>bool is_raid_hidden = 9;</code>
     */
    private $is_raid_hidden = false;

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\Raid\RaidInfo::initOnce();
        parent::__construct();
    }

    /**
     * <code>int64 raid_seed = 1;</code>
     */
    public function getRaidSeed()
    {
        return $this->raid_seed;
    }

    /**
     * <code>int64 raid_seed = 1;</code>
     */
    public function setRaidSeed($var)
    {
        GPBUtil::checkInt64($var);
        $this->raid_seed = $var;
    }

    /**
     * <code>int64 raid_spawn_ms = 2;</code>
     */
    public function getRaidSpawnMs()
    {
        return $this->raid_spawn_ms;
    }

    /**
     * <code>int64 raid_spawn_ms = 2;</code>
     */
    public function setRaidSpawnMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->raid_spawn_ms = $var;
    }

    /**
     * <code>int64 raid_battle_ms = 3;</code>
     */
    public function getRaidBattleMs()
    {
        return $this->raid_battle_ms;
    }

    /**
     * <code>int64 raid_battle_ms = 3;</code>
     */
    public function setRaidBattleMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->raid_battle_ms = $var;
    }

    /**
     * <code>int64 raid_end_ms = 4;</code>
     */
    public function getRaidEndMs()
    {
        return $this->raid_end_ms;
    }

    /**
     * <code>int64 raid_end_ms = 4;</code>
     */
    public function setRaidEndMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->raid_end_ms = $var;
    }

    /**
     * <code>.POGOProtos.Data.PokemonData raid_pokemon = 5;</code>
     */
    public function getRaidPokemon()
    {
        return $this->raid_pokemon;
    }

    /**
     * <code>.POGOProtos.Data.PokemonData raid_pokemon = 5;</code>
     */
    public function setRaidPokemon(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\PokemonData::class);
        $this->raid_pokemon = $var;
    }

    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    public function getRaidLevel()
    {
        return $this->raid_level;
    }

    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    public function setRaidLevel($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\RaidLevel::class);
        $this->raid_level = $var;
    }

    /**
     * <code>bool complete = 7;</code>
     */
    public function getComplete()
    {
        return $this->complete;
    }

    /**
     * <code>bool complete = 7;</code>
     */
    public function setComplete($var)
    {
        GPBUtil::checkBool($var);
        $this->complete = $var;
    }

    /**
     * <code>bool is_exclusive = 8;</code>
     */
    public function getIsExclusive()
    {
        return $this->is_exclusive;
    }

    /**
     * <code>bool is_exclusive = 8;</code>
     */
    public function setIsExclusive($var)
    {
        GPBUtil::checkBool($var);
        $this->is_exclusive = $var;
    }

    /**
     * <code>bool is_raid_hidden = 9;</code>
     */
    public function getIsRaidHidden()
    {
        return $this->is_raid_hidden;
    }

    /**
     * <code>bool is_raid_hidden = 9;</code>
     */
    public function setIsRaidHidden($var)
    {
        GPBUtil::checkBool($var);
        $this->is_raid_hidden = $var;
    }

}

