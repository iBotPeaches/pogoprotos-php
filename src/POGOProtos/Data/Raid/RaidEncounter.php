<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Raid/RaidEncounter.proto

namespace POGOProtos\Data\Raid;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.Raid.RaidEncounter</code>
 */
class RaidEncounter extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.POGOProtos.Data.PokemonData pokemon = 1;</code>
     */
    private $pokemon = null;
    /**
     * <code>int64 encounter_id = 2;</code>
     */
    private $encounter_id = 0;
    /**
     * <code>string spawnpoint_id = 3;</code>
     */
    private $spawnpoint_id = '';
    /**
     * <code>.POGOProtos.Data.Capture.CaptureProbability capture_probabilities = 4;</code>
     */
    private $capture_probabilities = null;
    /**
     * <code>int32 throws_remaining = 5;</code>
     */
    private $throws_remaining = 0;
    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    private $raid_level = 0;
    /**
     * <code>string fort_id = 7;</code>
     */
    private $fort_id = '';

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\Raid\RaidEncounter::initOnce();
        parent::__construct();
    }

    /**
     * <code>.POGOProtos.Data.PokemonData pokemon = 1;</code>
     */
    public function getPokemon()
    {
        return $this->pokemon;
    }

    /**
     * <code>.POGOProtos.Data.PokemonData pokemon = 1;</code>
     */
    public function setPokemon(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\PokemonData::class);
        $this->pokemon = $var;
    }

    /**
     * <code>int64 encounter_id = 2;</code>
     */
    public function getEncounterId()
    {
        return $this->encounter_id;
    }

    /**
     * <code>int64 encounter_id = 2;</code>
     */
    public function setEncounterId($var)
    {
        GPBUtil::checkInt64($var);
        $this->encounter_id = $var;
    }

    /**
     * <code>string spawnpoint_id = 3;</code>
     */
    public function getSpawnpointId()
    {
        return $this->spawnpoint_id;
    }

    /**
     * <code>string spawnpoint_id = 3;</code>
     */
    public function setSpawnpointId($var)
    {
        GPBUtil::checkString($var, True);
        $this->spawnpoint_id = $var;
    }

    /**
     * <code>.POGOProtos.Data.Capture.CaptureProbability capture_probabilities = 4;</code>
     */
    public function getCaptureProbabilities()
    {
        return $this->capture_probabilities;
    }

    /**
     * <code>.POGOProtos.Data.Capture.CaptureProbability capture_probabilities = 4;</code>
     */
    public function setCaptureProbabilities(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Data\Capture\CaptureProbability::class);
        $this->capture_probabilities = $var;
    }

    /**
     * <code>int32 throws_remaining = 5;</code>
     */
    public function getThrowsRemaining()
    {
        return $this->throws_remaining;
    }

    /**
     * <code>int32 throws_remaining = 5;</code>
     */
    public function setThrowsRemaining($var)
    {
        GPBUtil::checkInt32($var);
        $this->throws_remaining = $var;
    }

    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    public function getRaidLevel()
    {
        return $this->raid_level;
    }

    /**
     * <code>.POGOProtos.Enums.RaidLevel raid_level = 6;</code>
     */
    public function setRaidLevel($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\RaidLevel::class);
        $this->raid_level = $var;
    }

    /**
     * <code>string fort_id = 7;</code>
     */
    public function getFortId()
    {
        return $this->fort_id;
    }

    /**
     * <code>string fort_id = 7;</code>
     */
    public function setFortId($var)
    {
        GPBUtil::checkString($var, True);
        $this->fort_id = $var;
    }

}

