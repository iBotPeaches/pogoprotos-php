<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos/Data/Gym/GymDefender.proto
 */


namespace POGOProtos\Data\Gym;

/**
 * Protobuf message : POGOProtos.Data.Gym.GymDefender
 */
class GymDefender extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * motivated_pokemon optional message = 1
     *
     * @var \POGOProtos\Map\Pokemon\MotivatedPokemon
     */
    protected $motivated_pokemon = null;

    /**
     * deployment_totals optional message = 2
     *
     * @var \POGOProtos\Data\Gym\GymDefender\DeploymentTotals
     */
    protected $deployment_totals = null;

    /**
     * trainer_public_profile optional message = 3
     *
     * @var \POGOProtos\Data\Player\PlayerPublicProfile
     */
    protected $trainer_public_profile = null;

    /**
     * Check if 'motivated_pokemon' has a value
     *
     * @return bool
     */
    public function hasMotivatedPokemon()
    {
        return $this->motivated_pokemon !== null;
    }

    /**
     * Get 'motivated_pokemon' value
     *
     * @return \POGOProtos\Map\Pokemon\MotivatedPokemon
     */
    public function getMotivatedPokemon()
    {
        return $this->motivated_pokemon;
    }

    /**
     * Set 'motivated_pokemon' value
     *
     * @param \POGOProtos\Map\Pokemon\MotivatedPokemon $value
     */
    public function setMotivatedPokemon(\POGOProtos\Map\Pokemon\MotivatedPokemon $value = null)
    {
        $this->motivated_pokemon = $value;
    }

    /**
     * Check if 'deployment_totals' has a value
     *
     * @return bool
     */
    public function hasDeploymentTotals()
    {
        return $this->deployment_totals !== null;
    }

    /**
     * Get 'deployment_totals' value
     *
     * @return \POGOProtos\Data\Gym\GymDefender\DeploymentTotals
     */
    public function getDeploymentTotals()
    {
        return $this->deployment_totals;
    }

    /**
     * Set 'deployment_totals' value
     *
     * @param \POGOProtos\Data\Gym\GymDefender\DeploymentTotals $value
     */
    public function setDeploymentTotals(\POGOProtos\Data\Gym\GymDefender\DeploymentTotals $value = null)
    {
        $this->deployment_totals = $value;
    }

    /**
     * Check if 'trainer_public_profile' has a value
     *
     * @return bool
     */
    public function hasTrainerPublicProfile()
    {
        return $this->trainer_public_profile !== null;
    }

    /**
     * Get 'trainer_public_profile' value
     *
     * @return \POGOProtos\Data\Player\PlayerPublicProfile
     */
    public function getTrainerPublicProfile()
    {
        return $this->trainer_public_profile;
    }

    /**
     * Set 'trainer_public_profile' value
     *
     * @param \POGOProtos\Data\Player\PlayerPublicProfile $value
     */
    public function setTrainerPublicProfile(\POGOProtos\Data\Player\PlayerPublicProfile $value = null)
    {
        $this->trainer_public_profile = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'motivated_pokemon' => null,
            'deployment_totals' => null,
            'trainer_public_profile' => null
        ], $values);

        $message->setMotivatedPokemon($values['motivated_pokemon']);
        $message->setDeploymentTotals($values['deployment_totals']);
        $message->setTrainerPublicProfile($values['trainer_public_profile']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'GymDefender',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'motivated_pokemon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Map.Pokemon.MotivatedPokemon'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'deployment_totals',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Gym.GymDefender.DeploymentTotals'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'trainer_public_profile',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Player.PlayerPublicProfile'
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->motivated_pokemon !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeVarint($stream, $this->motivated_pokemon->serializedSize($sizeContext));
            $this->motivated_pokemon->writeTo($context);
        }

        if ($this->deployment_totals !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeVarint($stream, $this->deployment_totals->serializedSize($sizeContext));
            $this->deployment_totals->writeTo($context);
        }

        if ($this->trainer_public_profile !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeVarint($stream, $this->trainer_public_profile->serializedSize($sizeContext));
            $this->trainer_public_profile->writeTo($context);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Map\Pokemon\MotivatedPokemon();

                $this->motivated_pokemon = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Gym\GymDefender\DeploymentTotals();

                $this->deployment_totals = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Player\PlayerPublicProfile();

                $this->trainer_public_profile = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->motivated_pokemon !== null) {
            $innerSize = $this->motivated_pokemon->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->deployment_totals !== null) {
            $innerSize = $this->deployment_totals->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->trainer_public_profile !== null) {
            $innerSize = $this->trainer_public_profile->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->motivated_pokemon = null;
        $this->deployment_totals = null;
        $this->trainer_public_profile = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Data\Gym\GymDefender) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->motivated_pokemon = ($message->motivated_pokemon !== null) ? $message->motivated_pokemon : $this->motivated_pokemon;
        $this->deployment_totals = ($message->deployment_totals !== null) ? $message->deployment_totals : $this->deployment_totals;
        $this->trainer_public_profile = ($message->trainer_public_profile !== null) ? $message->trainer_public_profile : $this->trainer_public_profile;
    }


}

