<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Requests/Messages/PlatformClientActionsMessage.proto

namespace POGOProtos\Networking\Requests\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Networking.Requests.Messages.PingMessage</code>
 */
class PingMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 response_size_bytes = 1;</code>
     */
    private $response_size_bytes = 0;
    /**
     * <code>string random_request_bytes = 2;</code>
     */
    private $random_request_bytes = '';
    /**
     * <code>bool use_cache_for_random_request_bytes = 3;</code>
     */
    private $use_cache_for_random_request_bytes = false;

    public function __construct() {
        \GPBMetadata\POGOProtos\Networking\Requests\Messages\PlatformClientActionsMessage::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 response_size_bytes = 1;</code>
     */
    public function getResponseSizeBytes()
    {
        return $this->response_size_bytes;
    }

    /**
     * <code>int32 response_size_bytes = 1;</code>
     */
    public function setResponseSizeBytes($var)
    {
        GPBUtil::checkInt32($var);
        $this->response_size_bytes = $var;
    }

    /**
     * <code>string random_request_bytes = 2;</code>
     */
    public function getRandomRequestBytes()
    {
        return $this->random_request_bytes;
    }

    /**
     * <code>string random_request_bytes = 2;</code>
     */
    public function setRandomRequestBytes($var)
    {
        GPBUtil::checkString($var, True);
        $this->random_request_bytes = $var;
    }

    /**
     * <code>bool use_cache_for_random_request_bytes = 3;</code>
     */
    public function getUseCacheForRandomRequestBytes()
    {
        return $this->use_cache_for_random_request_bytes;
    }

    /**
     * <code>bool use_cache_for_random_request_bytes = 3;</code>
     */
    public function setUseCacheForRandomRequestBytes($var)
    {
        GPBUtil::checkBool($var);
        $this->use_cache_for_random_request_bytes = $var;
    }

}

