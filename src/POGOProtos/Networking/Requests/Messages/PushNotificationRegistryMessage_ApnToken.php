<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Requests/Messages/PushNotificationRegistryMessage.proto

namespace POGOProtos\Networking\Requests\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Networking.Requests.Messages.PushNotificationRegistryMessage.ApnToken</code>
 */
class PushNotificationRegistryMessage_ApnToken extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string registration_id = 1;</code>
     */
    private $registration_id = '';
    /**
     * <code>string bundle_identifier = 2;</code>
     */
    private $bundle_identifier = '';
    /**
     * <code>int32 payload_byte_size = 3;</code>
     */
    private $payload_byte_size = 0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Networking\Requests\Messages\PushNotificationRegistryMessage::initOnce();
        parent::__construct();
    }

    /**
     * <code>string registration_id = 1;</code>
     */
    public function getRegistrationId()
    {
        return $this->registration_id;
    }

    /**
     * <code>string registration_id = 1;</code>
     */
    public function setRegistrationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->registration_id = $var;
    }

    /**
     * <code>string bundle_identifier = 2;</code>
     */
    public function getBundleIdentifier()
    {
        return $this->bundle_identifier;
    }

    /**
     * <code>string bundle_identifier = 2;</code>
     */
    public function setBundleIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->bundle_identifier = $var;
    }

    /**
     * <code>int32 payload_byte_size = 3;</code>
     */
    public function getPayloadByteSize()
    {
        return $this->payload_byte_size;
    }

    /**
     * <code>int32 payload_byte_size = 3;</code>
     */
    public function setPayloadByteSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->payload_byte_size = $var;
    }

}

