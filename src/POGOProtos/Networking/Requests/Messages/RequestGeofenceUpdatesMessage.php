<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Requests/Messages/RequestGeofenceUpdatesMessage.proto

namespace POGOProtos\Networking\Requests\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>POGOProtos.Networking.Requests.Messages.RequestGeofenceUpdatesMessage</code>
 */
class RequestGeofenceUpdatesMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 number_of_points = 1;</code>
     */
    private $number_of_points = 0;
    /**
     * Generated from protobuf field <code>double minimum_point_radius_m = 2;</code>
     */
    private $minimum_point_radius_m = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $number_of_points
     *     @type float $minimum_point_radius_m
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\POGOProtos\Networking\Requests\Messages\RequestGeofenceUpdatesMessage::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 number_of_points = 1;</code>
     * @return int
     */
    public function getNumberOfPoints()
    {
        return $this->number_of_points;
    }

    /**
     * Generated from protobuf field <code>int32 number_of_points = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNumberOfPoints($var)
    {
        GPBUtil::checkInt32($var);
        $this->number_of_points = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double minimum_point_radius_m = 2;</code>
     * @return float
     */
    public function getMinimumPointRadiusM()
    {
        return $this->minimum_point_radius_m;
    }

    /**
     * Generated from protobuf field <code>double minimum_point_radius_m = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setMinimumPointRadiusM($var)
    {
        GPBUtil::checkDouble($var);
        $this->minimum_point_radius_m = $var;

        return $this;
    }

}

