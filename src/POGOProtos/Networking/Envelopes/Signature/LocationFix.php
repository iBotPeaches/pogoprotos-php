<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Envelopes/Signature.proto

namespace POGOProtos\Networking\Envelopes\Signature;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>POGOProtos.Networking.Envelopes.Signature.LocationFix</code>
 */
class LocationFix extends \Google\Protobuf\Internal\Message
{
    /**
     * "network", "gps", "fused", possibly others
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     */
    private $provider = '';
    /**
     * in ms since start
     *
     * Generated from protobuf field <code>uint64 timestamp_snapshot = 2;</code>
     */
    private $timestamp_snapshot = 0;
    /**
     * Confirmed on android/ios
     *
     * Generated from protobuf field <code>float altitude = 4;</code>
     */
    private $altitude = 0.0;
    /**
     * Generated from protobuf field <code>float latitude = 13;</code>
     */
    private $latitude = 0.0;
    /**
     * Generated from protobuf field <code>float longitude = 14;</code>
     */
    private $longitude = 0.0;
    /**
     * iOS only (-1 for no reading available, speed in m/s)
     *
     * Generated from protobuf field <code>float speed = 18;</code>
     */
    private $speed = 0.0;
    /**
     * iOS only (range seems to be -1 for not reading, and 0 to 360 for reading) confirmed by &#64;marcel
     *
     * Generated from protobuf field <code>float course = 20;</code>
     */
    private $course = 0.0;
    /**
     * in meters, both on Android and iOS
     *
     * Generated from protobuf field <code>float horizontal_accuracy = 21;</code>
     */
    private $horizontal_accuracy = 0.0;
    /**
     * iOS only
     *
     * Generated from protobuf field <code>float vertical_accuracy = 22;</code>
     */
    private $vertical_accuracy = 0.0;
    /**
     * Usually 3 (possibly GPS status: 1 = no fix, 2 = acquiring/inaccurate, 3 = fix acquired)
     *
     * Generated from protobuf field <code>uint64 provider_status = 26;</code>
     */
    private $provider_status = 0;
    /**
     * On iOS there are some LocationFixes with unk26=1 and everything else empty
     *
     * Generated from protobuf field <code>uint32 floor = 27;</code>
     */
    private $floor = 0;
    /**
     * Always 1 (if there is data at all)
     *
     * Generated from protobuf field <code>uint64 location_type = 28;</code>
     */
    private $location_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $provider
     *           "network", "gps", "fused", possibly others
     *     @type int|string $timestamp_snapshot
     *           in ms since start
     *     @type float $altitude
     *           Confirmed on android/ios
     *     @type float $latitude
     *     @type float $longitude
     *     @type float $speed
     *           iOS only (-1 for no reading available, speed in m/s)
     *     @type float $course
     *           iOS only (range seems to be -1 for not reading, and 0 to 360 for reading) confirmed by &#64;marcel
     *     @type float $horizontal_accuracy
     *           in meters, both on Android and iOS
     *     @type float $vertical_accuracy
     *           iOS only
     *     @type int|string $provider_status
     *           Usually 3 (possibly GPS status: 1 = no fix, 2 = acquiring/inaccurate, 3 = fix acquired)
     *     @type int $floor
     *           On iOS there are some LocationFixes with unk26=1 and everything else empty
     *     @type int|string $location_type
     *           Always 1 (if there is data at all)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\POGOProtos\Networking\Envelopes\Signature::initOnce();
        parent::__construct($data);
    }

    /**
     * "network", "gps", "fused", possibly others
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * "network", "gps", "fused", possibly others
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * in ms since start
     *
     * Generated from protobuf field <code>uint64 timestamp_snapshot = 2;</code>
     * @return int|string
     */
    public function getTimestampSnapshot()
    {
        return $this->timestamp_snapshot;
    }

    /**
     * in ms since start
     *
     * Generated from protobuf field <code>uint64 timestamp_snapshot = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestampSnapshot($var)
    {
        GPBUtil::checkUint64($var);
        $this->timestamp_snapshot = $var;

        return $this;
    }

    /**
     * Confirmed on android/ios
     *
     * Generated from protobuf field <code>float altitude = 4;</code>
     * @return float
     */
    public function getAltitude()
    {
        return $this->altitude;
    }

    /**
     * Confirmed on android/ios
     *
     * Generated from protobuf field <code>float altitude = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setAltitude($var)
    {
        GPBUtil::checkFloat($var);
        $this->altitude = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float latitude = 13;</code>
     * @return float
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * Generated from protobuf field <code>float latitude = 13;</code>
     * @param float $var
     * @return $this
     */
    public function setLatitude($var)
    {
        GPBUtil::checkFloat($var);
        $this->latitude = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float longitude = 14;</code>
     * @return float
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * Generated from protobuf field <code>float longitude = 14;</code>
     * @param float $var
     * @return $this
     */
    public function setLongitude($var)
    {
        GPBUtil::checkFloat($var);
        $this->longitude = $var;

        return $this;
    }

    /**
     * iOS only (-1 for no reading available, speed in m/s)
     *
     * Generated from protobuf field <code>float speed = 18;</code>
     * @return float
     */
    public function getSpeed()
    {
        return $this->speed;
    }

    /**
     * iOS only (-1 for no reading available, speed in m/s)
     *
     * Generated from protobuf field <code>float speed = 18;</code>
     * @param float $var
     * @return $this
     */
    public function setSpeed($var)
    {
        GPBUtil::checkFloat($var);
        $this->speed = $var;

        return $this;
    }

    /**
     * iOS only (range seems to be -1 for not reading, and 0 to 360 for reading) confirmed by &#64;marcel
     *
     * Generated from protobuf field <code>float course = 20;</code>
     * @return float
     */
    public function getCourse()
    {
        return $this->course;
    }

    /**
     * iOS only (range seems to be -1 for not reading, and 0 to 360 for reading) confirmed by &#64;marcel
     *
     * Generated from protobuf field <code>float course = 20;</code>
     * @param float $var
     * @return $this
     */
    public function setCourse($var)
    {
        GPBUtil::checkFloat($var);
        $this->course = $var;

        return $this;
    }

    /**
     * in meters, both on Android and iOS
     *
     * Generated from protobuf field <code>float horizontal_accuracy = 21;</code>
     * @return float
     */
    public function getHorizontalAccuracy()
    {
        return $this->horizontal_accuracy;
    }

    /**
     * in meters, both on Android and iOS
     *
     * Generated from protobuf field <code>float horizontal_accuracy = 21;</code>
     * @param float $var
     * @return $this
     */
    public function setHorizontalAccuracy($var)
    {
        GPBUtil::checkFloat($var);
        $this->horizontal_accuracy = $var;

        return $this;
    }

    /**
     * iOS only
     *
     * Generated from protobuf field <code>float vertical_accuracy = 22;</code>
     * @return float
     */
    public function getVerticalAccuracy()
    {
        return $this->vertical_accuracy;
    }

    /**
     * iOS only
     *
     * Generated from protobuf field <code>float vertical_accuracy = 22;</code>
     * @param float $var
     * @return $this
     */
    public function setVerticalAccuracy($var)
    {
        GPBUtil::checkFloat($var);
        $this->vertical_accuracy = $var;

        return $this;
    }

    /**
     * Usually 3 (possibly GPS status: 1 = no fix, 2 = acquiring/inaccurate, 3 = fix acquired)
     *
     * Generated from protobuf field <code>uint64 provider_status = 26;</code>
     * @return int|string
     */
    public function getProviderStatus()
    {
        return $this->provider_status;
    }

    /**
     * Usually 3 (possibly GPS status: 1 = no fix, 2 = acquiring/inaccurate, 3 = fix acquired)
     *
     * Generated from protobuf field <code>uint64 provider_status = 26;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProviderStatus($var)
    {
        GPBUtil::checkUint64($var);
        $this->provider_status = $var;

        return $this;
    }

    /**
     * On iOS there are some LocationFixes with unk26=1 and everything else empty
     *
     * Generated from protobuf field <code>uint32 floor = 27;</code>
     * @return int
     */
    public function getFloor()
    {
        return $this->floor;
    }

    /**
     * On iOS there are some LocationFixes with unk26=1 and everything else empty
     *
     * Generated from protobuf field <code>uint32 floor = 27;</code>
     * @param int $var
     * @return $this
     */
    public function setFloor($var)
    {
        GPBUtil::checkUint32($var);
        $this->floor = $var;

        return $this;
    }

    /**
     * Always 1 (if there is data at all)
     *
     * Generated from protobuf field <code>uint64 location_type = 28;</code>
     * @return int|string
     */
    public function getLocationType()
    {
        return $this->location_type;
    }

    /**
     * Always 1 (if there is data at all)
     *
     * Generated from protobuf field <code>uint64 location_type = 28;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLocationType($var)
    {
        GPBUtil::checkUint64($var);
        $this->location_type = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(LocationFix::class, \POGOProtos\Networking\Envelopes\Signature_LocationFix::class);

