<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Settings/CombatChallengeGlobalSettings.proto

namespace POGOProtos\Settings;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>POGOProtos.Settings.CombatChallengeGlobalSettings</code>
 */
class CombatChallengeGlobalSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.POGOProtos.Enums.FriendshipLevelMilestone distance_check_override_friendship_level = 1;</code>
     */
    private $distance_check_override_friendship_level = 0;
    /**
     * Generated from protobuf field <code>int32 get_combat_challenge_polling_interval_sec = 2;</code>
     */
    private $get_combat_challenge_polling_interval_sec = 0;
    /**
     * Generated from protobuf field <code>bool enable_downstream_dispatch = 3;</code>
     */
    private $enable_downstream_dispatch = false;
    /**
     * Generated from protobuf field <code>bool enable_challenge_notifications = 4;</code>
     */
    private $enable_challenge_notifications = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $distance_check_override_friendship_level
     *     @type int $get_combat_challenge_polling_interval_sec
     *     @type bool $enable_downstream_dispatch
     *     @type bool $enable_challenge_notifications
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\POGOProtos\Settings\CombatChallengeGlobalSettings::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.POGOProtos.Enums.FriendshipLevelMilestone distance_check_override_friendship_level = 1;</code>
     * @return int
     */
    public function getDistanceCheckOverrideFriendshipLevel()
    {
        return $this->distance_check_override_friendship_level;
    }

    /**
     * Generated from protobuf field <code>.POGOProtos.Enums.FriendshipLevelMilestone distance_check_override_friendship_level = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDistanceCheckOverrideFriendshipLevel($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\FriendshipLevelMilestone::class);
        $this->distance_check_override_friendship_level = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 get_combat_challenge_polling_interval_sec = 2;</code>
     * @return int
     */
    public function getGetCombatChallengePollingIntervalSec()
    {
        return $this->get_combat_challenge_polling_interval_sec;
    }

    /**
     * Generated from protobuf field <code>int32 get_combat_challenge_polling_interval_sec = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setGetCombatChallengePollingIntervalSec($var)
    {
        GPBUtil::checkInt32($var);
        $this->get_combat_challenge_polling_interval_sec = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool enable_downstream_dispatch = 3;</code>
     * @return bool
     */
    public function getEnableDownstreamDispatch()
    {
        return $this->enable_downstream_dispatch;
    }

    /**
     * Generated from protobuf field <code>bool enable_downstream_dispatch = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableDownstreamDispatch($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_downstream_dispatch = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool enable_challenge_notifications = 4;</code>
     * @return bool
     */
    public function getEnableChallengeNotifications()
    {
        return $this->enable_challenge_notifications;
    }

    /**
     * Generated from protobuf field <code>bool enable_challenge_notifications = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableChallengeNotifications($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_challenge_notifications = $var;

        return $this;
    }

}

